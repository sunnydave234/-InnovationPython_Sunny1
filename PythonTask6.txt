#1. Write a program in Python to find out the character in a string which is uppercase using list comprehension. 
s=input("enter string: ")
res=[i for i in s if i.isupper()]
print(res)

#2. Write a program to construct a dictionary from the two lists containing the names of students and their corresponding subjects. The dictionary should map the students with their respective subjects. Let’s see how to do this using for loops and dictionary comprehension. 
students = ['Smit', 'Jaya', 'Rayyan']
subjects = ['CSE', 'Networking', 'Operating System']
res={students[i]:subjects[i] for i in range(len(students))}
print(res)

or 

students = ['Smit', 'Jaya', 'Rayyan']
subjects = ['CSE', 'Networking', 'Operating System']
res=dict(zip(students, subjects))
print(res)

#3. Learn More about Yield, next and Generators 

Yield: yield is a keyword that is used like return, except the function will return a generator. when the function is called, the execution starts from the last yield statement
next: next is a function to iterate through generators to access values one by one. and we have to call this function everytime to access the next value from the iterator
Generators: Generators are iterators, but you can only iterate over them once. It’s because they do not store all the values in memory, they generate the values on the fly


#4. Write a program in Python using generators to reverse the string. 
Input String = “Consultadd Training” 

def revStr(s):
    l=len(s)
    for i in range(l-1, -1, -1):
        yield s[i]

for j in revStr("Consultadd Training"):
    print(j, end='')

#5. Write an example on decorators.
def plus_one(number):
    def add_one(number):
        return number + 1


    result = add_one(number)
    return result
plus_one(4)