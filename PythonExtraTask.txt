#1. Create a list of given structure and get the Access list as provided below: x=[100,200,300,400,500,[1,2,3,4,5,[10,20,30,40,50],6,7,8,9],600,700,800] Access list: [1, 2, 3, 4]Access list: [600, 700] 
x=[100,200,300,400,500,[1,2,3,4,5,[10,20,30,40,50],6,7,8,9],600,700,800]
print(x[5][:4])
print(x[-3:-1])
print(x[::-1])
print(x[5][5][0])
x.clear()
print(x)

#2. Create a list of thousand numbers using range and xrange and see the difference between each other. 

x=[i for i in range(1,1001)]
print(x)

xrange method shows NameError: name 'xrange' is not defined

#3. How Tuple is beneficial as compared to the list? 
Tuples are immutable and they can be used as keys for a dictionary, and list can't. Tuples are more memory efficient

#4. Write a program in Python to iterate through the list of numbers in the range of 1,100 and print the number which is divisible by 3 and is a multiple of 2. 
for i in range(0,101):
    if i%2==0 and i%3==0:
        print(i)

#5. Write a program in Python to reverse a string and print only the vowel alphabet if it exists in the string with their index. 
a=input("enter string: ")
b=""
for i in a:
    if i in "aeiouAEIOU":
        b += i
print(b[::-1])

#6. Write a program in Python to iterate through the string “hello my name is abcde” and print the string which is having an even length.
s="hello my name is abcde"
l=s.split()
print(l)
for i in l:
    if len(i)%2==0:
        print(i)

#7. Write a program in python to print the pair of numbers whose sum is equal to the result number that is let's say 8. 
x=[1,2,3,4,5,6,7,8,9,-1] 
x=[1,2,3,4,5,6,7,8,9,-1]
sum=8

for i in x:
    for j in range(1, len(x)):
        if i+x[j]==sum:
            print(i, j)

#8. Write a program in Python to complete the following task: 
Create two lists such as even_list and odd_list 
Ask user to enter a number in the range of 1,50 and make sure if the entered number is even, append it to the even_list and if the entered number is odd append it to the odd_list. Keep that in mind you can only add 5 items in each list 
Make sure once you enter all the 5 elements, calculate the sum of the list and return the maximum of the list. 

even_list=[]
odd_list=[]
evencount=0
oddcount=0


while True:
    if evencount==5 and oddcount==5:
        break
    num=int(input("enter numbers between 1-50: "))

    if num%2==0:
        if evencount==5:
            continue
        even_list.append(num)
        evencount+=1

    elif num % 2 != 0:
        if oddcount==5:
            continue
        odd_list.append(num)
        oddcount+=1


print(even_list)
print(odd_list)


#9. Write a program to find out the occurrence of a specific character from an alphanumeric string. Sample input: 12abcbacbaba344ab  
Expected output: a=5 b=5 c=2 
NOTE: Make sure to avoid counting the occurrence of numeric values in the string. 

inp_str = "12abcbacbaba344ab"
s=set(inp_str)

for i in s:
    if i.isalpha():
        print(i +" =", inp_str.count(i), end=' ')

#10. Generate and print another tuple whose values are even numbers in the given tuple (1,2,3,4,5,6,7,8,9,10).
t = (1,2,3,4,5,6,7,8,9,10)
l=list([i for i in t if i%2==0])
print(l)