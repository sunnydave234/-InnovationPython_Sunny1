#1. Write a program in Python to allow the error of syntax to be handled using exception handling. HINT: Use SyntaxError 
a=5
b=0

try:
    c=a/b
    print(c)
except ZeroDivisionError:
    print("Can not divide by zero.")

#2. Write a program in Python to allow the user to open a file by using the argv module. If the entered name is incorrect throw an exception and ask them to enter the name again. Make sure to use read only mode. 
from sys import argv

nop, fn = argv

try:
    while True:
        fh=open(fn,"r")
        a=fh.readline()
        print(a)
        fh.close()
        break
except:
    print("Wrong file name. Enter the file name again.")


#3. Write a program to handle an error if the user entered a number more than four digits it should return “The length is too short/long !!! Please provide only four digits”  

a = input("enter 4 digit number: ")
try:

    if len(a)==4:
        pass
    if len(a)>4 or len(a)<4:
        raise ValueError

except:
    if len(a)<4:
        print("The length is too short!!! Pleas provide only 4 digits")
    if len(a)>4:
        print("The length is too long!!! Pleas provide only 4 digits")

#4. Create a login page backend to ask users to enter the username and password. Make sure to ask for a Re-Type Password and if the password is incorrect give chance to enter it again but it should not be more than 3 times. 
user=input("enter user name: ")
password=input("enter password: ")
repassword=input("reenter your passoword:")
count=3

while count>0:
    if repassword != password:
        print("Wrong password, enter again.")
        repassword = input("reenter your passoword:")
    elif repassword == password:
        print("Correct password")
        break
    count -= 1

#5. Go through the link provided below to understand finally and raise concept: https://www.programiz.com/python-programming/exception-handling 
Finally:
he finally keyword is used in try...except blocks. It defines a block of code to run when the try...except...else block is final.
The finally block will be executed no matter if the try block raises an error or not.
This can be useful to close objects and clean up resources.

Raise:
raise is used to raise an exception, we can define what kind of an error we want to raise and print the text acordinglly.

#6. Read doc.txt file using Python File handling concept and return only the even length string from the file. Consider the content of doc.txt as given below: 
Hello I am a file 
Where you need to return the data string 
Which is of even length 
Make sure you return the content in The same link as it is present.

fh=open("doc.txt","w")
c=fh.write("Hello I am a file\nWhere you need to return the data string\nWhich is of even length\nMake sure you return the content in The same link as it is present.")
fh.close()
fh=open("doc.txt","r")
counter=0
content=fh.read()
colist=content.split("\n")
for i in colist:
    if i:
        counter += 1
fh.close()

fh=open("doc.txt", "r")

while counter>0:
    d = fh.readline()
    if len(d)%2==0:
        print(d)

    counter -= 1

fh.close()