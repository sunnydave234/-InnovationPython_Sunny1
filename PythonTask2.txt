#TASK TWO

#1.OPERATORS AND DECISION MAKING STATEMENT
If a number is divisible by 3 it should print “Consultadd” as a string
If a number is divisible by 5 it should print “Python Training” as a string
If a number is divisible by both 3 and 5 it should print “Consultadd - Python Training” as a string.
Ans:
a=int(input("enter a number: "))
if a % 3 == 0 and a % 5 == 0:
    print("Consultadd - Python Training")
elif a % 3 == 0:
    print("Consultadd")
elif a%5 == 0:
    print("Python Training")

#2.Write a program in Python to perform the following operator based task:
•	Ask user to choose the following option first:
o	If User Enter 1 - Addition
o	If User Enter 2 - Subtraction
o	If User Enter 3 - Division
o	If User Enter 4 - Multiplication
o	If User Enter 5 - Average
•	Ask user to enter two numbers and keep those numbers in variables num1 and num2 respectively for the first 4 options mentioned above.
•	Ask the user to enter two more numbers as first and second for calculating the average as soon as the user chooses an option 5.
•	At the end if the answer of any operation is Negative print a statement saying “NEGATIVE” NOTE: At a time a user can only perform one action.
Ans:
print(
    '''
    Enter 1 for Addition
    Enter 2 for Subtraction
    Enter 3 for Division
    Enter 4 for Multiplication
    Enter 5 for Average 
    ''')
num = int(input("Enter your choice: "))

if num in range(1,5):
    num1 = int(input("Enter 1st Number: "))
    num2 = int(input("Enter 2nd Number: "))
    if num == 1:
        a = num1 + num2
    elif num == 2:
        a = num1 - num2
    elif num == 3:
        a = num1 * num2
    elif num == 4:
        a = num1/num2


elif num == 5:
    num1 = int(input("Enter 1st Number: "))
    num2 = int(input("Enter 2nd Number: "))
    a = (num1+num2)/2

print(a)
if a < 0:
    print("NEGATIVE")

#3.Write a program in Python to implement the given flowchart:
Ans:
a=10
b=20
c=30
avg=(a+b+c)/3
print("avg =", avg)

if avg > a and avg > b and avg > c:
    print("avg is higher than a, b, c")
else:
    if avg>a and avg>b:
        print("avg is higher that a, b")
    elif avg>a and avg>c:
        print("avg is higher than a, c")
    elif avg>b and avg>c:
        print("avg is higher than b, c")
    elif avg>a:
        print("avg is higher than a")
    elif avg>b:
        print("avg is higher than a")
    elif avg>c:
        print("avg is higher than c")


#4.Write a program in Python to implement the given flowchart:
•	If user enters a negative number just break the loop and print “It’s Over”
•	If user enters a positive number just continue in the loop and print “Good Going”
Ans:
while True:
    a = int(input("enter a number: "))
    if a>=0:
        print("good going")
        continue

    elif a<0:
        print("It's over")
        break

#5.Write a program in Python which will find all such numbers which are divisible by 7 but are not a multiple of 5, between 2000 and 3200.
l = []
for i in range(1000, 2001):
    if i % 7 == 0 and not i % 5 == 0:
        l.append(i)
        print(i)

#6.What is the output of the following code examples?

•	x=123
for I in x:
      print(i)
Output:
1
2
3

•	i = 0
while I < 5
     print(i)
     i += 1
     if I == 3:
          break
     else:
          print(“error”)
Output:
0
error
1
error
2
	
•	count = 0
while True:
    print(count)
    count += 1
    if count >= 5:
        break
output:
0
1
2
3
4

#7.Write a program that prints all the numbers from 0 to 6 except 3 and 6.
Expected output: 0 1 2 4 5
Note: Use ‘continue’ statement
for i in range(1, 7):
    if i == 3 or i == 6:
        continue
    print(i)


#8.Write a program that accepts a string as an input from the user and calculate the number of digits and letters.
Ans:
a = input("enter your input: ")
l = 0
d = 0
for i in a:
    if i.isdigit():
        d += 1
    elif i.isalpha():
        l += 1
    else:
        pass
print("Letters: ", l)
print("Digits: ", d)

#9.Read the two parts of the question below:
•	Write a program such that it asks users to “guess the lucky number”. If the correct number is guessed the program stops, otherwise it continues forever.
Ans:
a = 10
while True:
    i = int(input("enter number: " ))
    if i == a:
        print("Correct Number")
        break

•	Modify the program so that it asks users whether they want to guess again each time. Use two variables, ‘number’ for the number and ‘answer’ for the answer to the question whether they want to continue guessing. The program stops if the user guesses the correct number or answers “no”. (The program continues as long as a user has not answered “no” and has not guessed the correct number)
Ans:
number = 10
answer = 'no'
while True:
    j = input("enter 'no' to exit: ")
    
    if j == answer:
        break
    
    else:
        i = int(input("enter number: "))

        if i == number:
            print("Correct Number")
            break


#10.Write a program such that it asks users to “guess the lucky number. 
The program asks for five guesses (no matter whether the correct number was guessed or not). If the correct number is guessed, the program outputs “Good guess!”, otherwise it outputs “Try again!”. After the fifth guess it stops and prints “Game over!”.
Ans:
counter = 5
lucky_number = 10

while counter > 0:
    a = int(input("Guess the lucky number: "))
    if a == lucky_number:
        print("Good guess!")
        break

    elif counter == 1:
        print("Game over!")
        break

    else:
        print("Try again!")
    counter -= 1


#11.In the previous question, insert break after the “Good guess!” print statement. break will terminate the while loop so that users do not have to continue guessing after they found the number. If the user does not guess the number at all, print “Sorry but that was not very successful”.
Ans:
counter = 5
lucky_number = 10

while counter > 0:
    a = int(input("Guess the lucky number: "))
    if a == lucky_number:
        print("Good guess!")
        break

    elif counter == 1:
        print("Game over!")
        break

    else:
        print("Sorry but that was not very successful")
    counter -= 1

